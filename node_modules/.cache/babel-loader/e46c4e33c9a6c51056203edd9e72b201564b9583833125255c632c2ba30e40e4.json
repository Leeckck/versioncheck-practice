{"ast":null,"code":"var _jsxFileName = \"/Users/changyun/Desktop/versionCheckSystem/src/serviceName.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport List from './list';\nimport PopAdd from './popAdd';\nimport PopAppTest from './popAppTest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServiceName() {\n  _s();\n  const [ser, setSer] = useState(\"\");\n  const [num, setNum] = useState(1);\n  let fetchURL = `http://3.36.74.212:8080/api/latest/versions`;\n  const serviceClick = e => {\n    e.preventDefault();\n    fetchURL = `http://3.36.74.212:8080/api/latest/versions/services/${ser}`;\n    fetch(fetchURL, {\n      method: \"GET\"\n    }).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n      throw new Error(\"에러 발생!\");\n    }).catch(error => {\n      alert(error);\n    }).then(data => {\n      console.log(data);\n    });\n    setNum(num + 1);\n  };\n  const totalClick = e => {\n    e.preventDefault();\n    fetchURL = 'http://3.36.74.212:8080/api/latest/versions';\n    setNum(num + 1);\n  };\n  const [posts, setPosts] = useState([]);\n  //웹에서 서버로 요청 --> 나 리스트 전달해줘 \n  const getPosts = () => {\n    console.log(num + \"getpost실행됨\");\n    axios.get(fetchURL) //axios를 통해 HTTP요청을 보내는 코드\n    .then(response => {\n      //then()에서는 HTTP요청을 통해 받아온 데이터를 처리할 수 있다\n      setPosts(response.data); // 이전에 useState으로 생성했던 setPosts함수를 통해 data를 posts에 저장합니다.\n    });\n  };\n\n  useEffect(getPosts, [num]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"service\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"ser\",\n      placeholder: \"\\uC11C\\uBE44\\uC2A4\\uBA85\",\n      id: \"ser\",\n      onChange: e => setSer(e.target.value),\n      defaultValue: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"check\",\n      onClick: serviceClick,\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"total\",\n      onClick: totalClick,\n      children: \"\\uC804\\uCCB4\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(PopAdd, {\n        text: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PopAppTest, {\n        text: \"App Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      items: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(ServiceName, \"RN5kScgp/JmEqi+K5AubZNy7tBY=\");\n_c = ServiceName;\nexport default ServiceName;\nvar _c;\n$RefreshReg$(_c, \"ServiceName\");","map":{"version":3,"names":["useState","useEffect","axios","List","PopAdd","PopAppTest","jsxDEV","_jsxDEV","ServiceName","_s","ser","setSer","num","setNum","fetchURL","serviceClick","e","preventDefault","fetch","method","then","response","ok","json","Error","catch","error","alert","data","console","log","totalClick","posts","setPosts","getPosts","get","className","children","type","id","placeholder","onChange","target","value","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","items","_c","$RefreshReg$"],"sources":["/Users/changyun/Desktop/versionCheckSystem/src/serviceName.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport List from './list';\nimport PopAdd from './popAdd';\nimport PopAppTest from './popAppTest';\n\n\nfunction ServiceName(){\n\n    const [ser, setSer] = useState(\"\");\n    const [num, setNum] = useState(1);\n  \n    \n    let fetchURL=`http://3.36.74.212:8080/api/latest/versions`\n    \n    const serviceClick=(e)=>{\n        e.preventDefault();\n        fetchURL=`http://3.36.74.212:8080/api/latest/versions/services/${ser}`\n\n    \n        fetch(fetchURL, {\n        method: \"GET\",\n        })\n        .then((response) => {\n            if (response.ok === true) {\n            return response.json();\n            }\n            throw new Error(\"에러 발생!\");\n        })\n        .catch((error) => {\n            alert(error);\n        })\n        .then((data) => {\n            console.log(data);\n        });\n\n        setNum(num+1)\n      \n\n    }\n\n    const totalClick=(e)=>{\n        e.preventDefault();\n        fetchURL='http://3.36.74.212:8080/api/latest/versions';\n        setNum(num+1)\n    }\n\n    const [posts, setPosts] = useState([]);\n    //웹에서 서버로 요청 --> 나 리스트 전달해줘 \n    const getPosts = () =>{\n    console.log(num+\"getpost실행됨\")\n    axios\n        .get(fetchURL)  //axios를 통해 HTTP요청을 보내는 코드\n        .then((response)=>{ //then()에서는 HTTP요청을 통해 받아온 데이터를 처리할 수 있다\n        setPosts(response.data); // 이전에 useState으로 생성했던 setPosts함수를 통해 data를 posts에 저장합니다.\n        })\n    }\n    useEffect(getPosts, [num]);\n\n\n\n  return (\n    <div className='service'>\n        <input type=\"text\" id = \"ser\" placeholder=\"서비스명\" id=\"ser\" onChange={(e)=>setSer(e.target.value)} defaultValue={\"\"} ></input>\n        <button id = \"check\" onClick={serviceClick}>확인</button>\n        <button id = \"total\" onClick={totalClick}>전체보기</button>\n        <div className='menu'>\n          <PopAdd text={\"ADD\"}/>\n          <PopAppTest text={\"App Test\"}/>\n        </div>\n        <List items={posts}/>\n    </div>\n\n    \n  );\n}\nexport default ServiceName;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}